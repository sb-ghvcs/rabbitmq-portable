name: Build Release

on:
  workflow_dispatch:
    inputs:
      windows_openssl_url:
        description: "Url to OpenSSL Installer for Windows"
        required: true


jobs:
  # build-linux-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup dependencies
  #       run: |
  #         sudo apt update
  #         sudo apt upgrade -y
  #         # Github's runner environment already has tar, make, and gcc installed
  #         # Install perl
  #         sudo apt install -y perl
  #         # Instal ncurses headers
  #         sudo apt-get install -y ncurses-dev
  #         # Install OpenSSL and Development Headers
  #         sudo apt install -y openssl libssl-dev
  #     - name: Verify Dependencies
  #       run: |
  #         tar --version
  #         make --version
  #         gcc --version
  #         perl --version
  #         openssl version
  #     - name: Checkout Erlang
  #       uses: actions/checkout@v4
  #       with:
  #         repository: erlang/otp
  #     - name: Configure Erlang Build
  #       run: |
  #         mkdir erlang
  #         cd otp
  #         export ERL_TOP=`pwd`
  #         ./configure --prefix=../erlang
  #     - name: Build Erlang
  #       run: |
  #         cd otp
  #         export ERL_TOP=`pwd`
  #         make
  #     - name: Test Erlang
  #       run: |
  #         cd otp
  #         export ERL_TOP=`pwd`
  #         make release_tests
  #         cd release/tests/test_server
  #         $ERL_TOP/bin/erl -s ts install -s ts smoke_test batch -s init stop
  #     - name: Install Erlang in folder
  #       run: |
  #         cd otp
  #         export ERL_TOP=`pwd`
  #         make install
  #     - name: Verify Erlang
  #       run: |
  #         cd erlang
  #         ls -lA

  build-windows-release:
    runs-on: windows-latest
    steps:
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      - name: Setup dependencies
        run: |
          # Install OpenSSL and Development Headers
          $installerUrl = '${{ github.event.inputs.windows_openssl_url }}'
          Invoke-WebRequest -Uri $installerUrl -OutFile 'openssl_installer.exe'
          Write-Output 'Downloaded OpenSSL installer.'
          Start-Process -FilePath 'openssl_installer.exe' -ArgumentList '/silent' -Wait
          Write-Output 'Installed OpenSSL.'
      - name: Checkout Erlang
        uses: actions/checkout@v4
        with:
          repository: erlang/otp
      - name: Move Erlang Source
        run: |
          Move-Item -Path . -Destination .\otp
      - name: Configure Erlang Build
        shell: bash
        run: |
          ls -lA
          mkdir erlang
          cd otp
          export ERL_TOP=`pwd`
          ./otp_build env_win32 x64
      # - name: Build Erlang
      #   run: |
      #     cd otp
      #     export ERL_TOP=`pwd`
      #     make
      # - name: Test Erlang
      #   run: |
      #     cd otp
      #     export ERL_TOP=`pwd`
      #     make release_tests
      #     cd release/tests/test_server
      #     $ERL_TOP/bin/erl -s ts install -s ts smoke_test batch -s init stop
      # - name: Install Erlang in folder
      #   run: |
      #     cd otp
      #     export ERL_TOP=`pwd`
      #     make install
      # - name: Verify Erlang
      #   run: |
      #     cd erlang
      #     ls -lA
          